# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include("cmake/cmkr.cmake" OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

include("cmake/msvc-static-runtime.cmake")
include("cmake/msvc-configurations.cmake")

project(x64dbg-automate)

if(CMKR_ROOT_PROJECT AND NOT CMKR_DISABLE_VCPKG)
	include(FetchContent)
	# Fix warnings about DOWNLOAD_EXTRACT_TIMESTAMP
	if(POLICY CMP0135)
		cmake_policy(SET CMP0135 NEW)
	endif()
	message(STATUS "Fetching vcpkg (2025.01.13)...")
	FetchContent_Declare(vcpkg URL "https://github.com/microsoft/vcpkg/archive/refs/tags/2025.01.13.tar.gz")
	FetchContent_GetProperties(vcpkg)
	if(NOT vcpkg_POPULATED)
		FetchContent_Populate(vcpkg)
		include("${vcpkg_SOURCE_DIR}/scripts/buildsystems/vcpkg.cmake")
	endif()
endif()

include(FetchContent)

message(STATUS "Fetching x64dbg...")
FetchContent_Declare(x64dbg
	URL
		"https://sourceforge.net/projects/x64dbg/files/snapshots/snapshot_2025-01-17_12-45.zip"
	URL_HASH
		SHA1=57e77f9a406647b0ad31311630e3fc44f25979b3
)
FetchContent_MakeAvailable(x64dbg)

include("cmake/x64dbg.cmake")

# Packages
find_package(cppzmq REQUIRED)

find_package(msgpack-cxx REQUIRED)

find_package(Boost REQUIRED)

# Target: x64dbg-automate
set(x64dbg-automate_SOURCES
	"src/plugin.cpp"
	"src/pluginmain.cpp"
	"src/xauto_cmd.cpp"
	"src/xauto_server.cpp"
	"src/plugin.h"
	"src/pluginmain.h"
	"src/xauto_cmd.h"
	"src/xauto_server.h"
	cmake.toml
)

x64dbg_plugin(x64dbg-automate)

target_sources(x64dbg-automate PRIVATE ${x64dbg-automate_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${x64dbg-automate_SOURCES})

target_compile_features(x64dbg-automate PUBLIC
	cxx_std_20
)

target_link_libraries(x64dbg-automate PUBLIC
	cppzmq
	msgpack-cxx
)

